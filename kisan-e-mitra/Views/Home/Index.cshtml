@{
    ViewBag.Title = Resources.Resource.label_title;
    //var welcomeNoteGreetingBase64 = ViewBag.AudioBase64Strings[0];
    //var languageChangeGreetingBase64 = ViewBag.AudioBase64Strings[1];
    var languageModel = TempData["LanguageModel"] as KisanEMitra.Models.LanguageModel;
    var isMaintenanceModeOn = TempData["isMaintenanceModeOn"];
    var resendOtpTranslation = Resources.Resource.message_resend_otp;
    var defaultErrorMessage = Resources.Resource.error_default_message;
    var defaultPlaceholder = Resources.Resource.message_ask_ur_question;
    var chatbotRestartSessionConfirmationMessage = Resources.Resource.message_session_restart_confirmation_message;
    var confirmationTitle = Resources.Resource.message_confirmation;
    var yesLabel = Resources.Resource.label_yes;
    var noLabel = Resources.Resource.label_no;
    var maintenanceModeHeader = Resources.Resource.message_maintenance_mode_header;
    var maintenanceModeBody = Resources.Resource.message_maintenance_mode_body;

    List<KisanEMitra.Models.LanguageInfo> availableLanguages = languageModel.AvailableLanguages;//ViewBag?.LanguageModel?.AvailableLanguages;
    KisanEMitra.Models.LanguageInfo selectedLanguage = languageModel.SelectedLanguage;//ViewBag?.LanguageModel?.SelectedLanguage;
    List<kishan_bot.Models.PopularQuestion> popularQuestions = TempData["PopularQuestions"] as List<kishan_bot.Models.PopularQuestion>;//ViewBag.PopularQuestions;
    var welcomeGreetingMessageBase64StringName = "welcome-greeting-message-base64-" + selectedLanguage.LanguageCultureCode + "-audio";

    TempData.Keep("LanguageModel");
    TempData.Keep("PopularQuestions");
    TempData.Keep("isMaintenanceModeOn");
}

@*@Html.Hidden("welcome-greeting-message-base64", (object)welcomeNoteGreetingBase64.ToString())
    @Html.Hidden("language-change-greeting-message-base64", (object)languageChangeGreetingBase64.ToString())*@
@Html.Hidden("resend-otp-translation", (object)resendOtpTranslation.ToString())
@Html.Hidden("default-chatbot-error-message", (object)defaultErrorMessage.ToString())
@Html.Hidden("default-placeholder-message", (object)defaultPlaceholder.ToString())
@Html.Hidden("isMaintenanceModeOn", (object)isMaintenanceModeOn.ToString())

<div class="msg-scrollbar" id="message-list">
    <div class="my-msg-content system-msg-bg chatbot-message-wrapper">
        <img src="../Content/images/chatbot.png" class="chatbot-message-wrapper-column-one">
        <div class="chatbot-message-wrapper-column-two">
            <span class="messageWelcomeGreeting">@(new HtmlString(Resources.Resource.message_welcome_greeting.ToString()))</span>

            <div>
                @foreach (var availableLanguage in availableLanguages)
                {
                    if (availableLanguage.LanguageCultureCode == selectedLanguage.LanguageCultureCode)
                    {
                        <button type="button" class="btn btn-success language-buttons languagesLabels" data-language-culture-code="@availableLanguage.LanguageCultureCode" data-language-english-label="@availableLanguage.LanguageEnglishLabel" data-language-culture-label="@availableLanguage.LanguageCultureLabel" data-current-language-culture-code="@selectedLanguage.LanguageCultureCode">@availableLanguage.LanguageCultureLabel</button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-secondary language-buttons languagesLabels" data-language-culture-code="@availableLanguage.LanguageCultureCode" data-language-english-label="@availableLanguage.LanguageEnglishLabel" data-language-culture-label="@availableLanguage.LanguageCultureLabel" data-current-language-culture-code="@selectedLanguage.LanguageCultureCode">@availableLanguage.LanguageCultureLabel</button>
                    }
                }
            </div>
        </div>
        <div class="d-flex align-self-start chatbot-message-wrapper-column-three me-md-2">
            <img id="playMessageImg-@{@welcomeGreetingMessageBase64StringName}" data-audio-id="@{@welcomeGreetingMessageBase64StringName}" data-action-name="setAutoPlayAudioMessage" src="../Content/images/start-audio.svg" alt="avatar 1" class="chatbot-message-action-buttons setAutoPlayAudioMessage">
        </div>
    </div>
</div>
<div class="input-container align-items-center justify-content-center p-3 p-md-4">
    <div class="scroll-container d-flex flex-row" id="popularQuestionsWrapper">
        <div class="query-messages-box">
            @foreach (var popularQuestion in popularQuestions)
            {
                <div id="popularQuestion" class="query-msg popularQuestions" data-popular-question="@popularQuestion.PopularQuestionValue">
                    <p>
                        @popularQuestion.PopularQuestionValue
                    </p>
                </div>
            }
        </div>
    </div>
    <div class="d-flex flex-row w-100 align-items-center">
        <button id="restartSessionButton" class="send-button me-2 me-sm-3">
            <img class="refresh-btn-style" src="~/Content/images/restart-session.svg" />
        </button>
        <div class="meg-input position-relative me-2 me-sm-3 flex-grow-1">
            @*<input id="userQuestionTextBox" type="text" class="message-input messageAskUrQuestion" placeholder="@Resources.Resource.message_ask_ur_question">*@
<textarea id="userQuestionTextBox" class="message-input messageAskUrQuestion message-input-textarea" placeholder="@Resources.Resource.message_ask_ur_question"></textarea>
            <button id="sendTextButton" type="submit" class="sendtext" disabled></button>
        </div>
        <button id="voiceRecordButtonId" class="send-button img-fluid bg-transparent position-relative">
            <div id="voiceRecordMicCircle" class="load"></div>
            <img id="recordingImage" src="~/Content/images/start-recording.svg" class="mic-style position-absolute voice-start-recording-border-color" />
        </button>
    </div>
</div>


<div class="modal fade" id="chatbotConfirmationModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="message-confirmation">@confirmationTitle</h1>
            </div>
            <div class="modal-body" id="chatbot-restart-session-confirmation-message">
                @chatbotRestartSessionConfirmationMessage
            </div>
            <div class="modal-footer">
                <button id="chatbotConfirmationModalCancelLabel" type="button" class="btn btn-secondary noLabel" data-bs-dismiss="modal">@noLabel</button>
                <button id="chatbotConfirmationModalSaveButton" type="button" class="btn btn-success yesLabel" data-modal-type="confirmation" data-bs-dismiss="modal">@yesLabel</button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="maintenanceModeModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered" data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="maintenance-mode-header">@maintenanceModeHeader</h1>
            </div>
            <div class="modal-body" id="maintenance-mode-message">
                @maintenanceModeBody
            </div>
        </div>
    </div>
</div>
